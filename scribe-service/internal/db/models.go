// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0

package db

import (
	"database/sql"
	"encoding/json"
	"time"
)

type AppAdvisoryJustificationEnum struct {
	ID   int64       `json:"id"`
	Name string      `json:"name"`
	Fts  interface{} `json:"fts"`
}

type AppAdvisoryStatusEnum struct {
	ID   int64       `json:"id"`
	Name string      `json:"name"`
	Fts  interface{} `json:"fts"`
}

type AppComplianceIntegrity struct {
	ComplianceStatus string  `json:"compliancestatus"`
	Integrity        *string `json:"integrity"`
}

type AppCustomVulnerabilityAdvisory struct {
	ID                    *int64           `json:"id"`
	PipelineRunId         int64            `json:"pipelinerunid"`
	VulnerabilityId       string           `json:"vulnerabilityid"`
	ComponentId           int64            `json:"componentid"`
	AdvisoryText          *string          `json:"advisorytext"`
	AdvisoryStatus        *int             `json:"advisorystatus"`
	AdvisoryJustification *int             `json:"advisoryjustification"`
	AdvisoryLastModified  *time.Time       `json:"advisorylastmodified"`
	AdvisoryResponse      *json.RawMessage `json:"advisoryresponse"`
	Severity              *int             `json:"severity"`
	Fts                   interface{}      `json:"fts"`
}

type AppDemoProduct struct {
	ID        *int64 `json:"id"`
	ProductId int64  `json:"productid"`
	Type      string `json:"type"`
}

type AppLabel struct {
	ID     *int64      `json:"id"`
	Name   *string     `json:"name"`
	TeamId int64       `json:"teamid"`
	Type   int32       `json:"type"`
	Fts    interface{} `json:"fts"`
}

type AppLabelAssignment struct {
	ID        *int64 `json:"id"`
	ProductId int64  `json:"productid"`
	LabelId   int64  `json:"labelid"`
}

type AppPipelineRunPublish struct {
	ID                         int64       `json:"id"`
	Published                  bool        `json:"published"`
	PublishedOn                *time.Time  `json:"publishedon"`
	Fts                        interface{} `json:"fts"`
	VulnerabilitiesPublished   bool        `json:"vulnerabilitiespublished"`
	VulnerabilitiesPublishedOn *time.Time  `json:"vulnerabilitiespublishedon"`
}

type AppPlan struct {
	ID                 *int   `json:"id"`
	Name               string `json:"name"`
	Type               int32  `json:"type"`
	Seats              int32  `json:"seats"`
	RetentionMonths    int32  `json:"retentionmonths"`
	BuildsPerMonth     int32  `json:"buildspermonth"`
	BlueSnapStoreId    *int64 `json:"bluesnapstoreid"`
	BlueSnapSkuMonthly *int64 `json:"bluesnapskumonthly"`
	BlueSnapSkuAnnual  *int64 `json:"bluesnapskuannual"`
}

type AppProduct struct {
	ID             *int64      `json:"id"`
	Name           string      `json:"name"`
	TeamId         int64       `json:"teamid"`
	Key            string      `json:"key"`
	UserDefinedKey *string     `json:"userdefinedkey"`
	Fts            interface{} `json:"fts"`
}

type AppShedlock struct {
	Name      string    `json:"name"`
	LockUntil time.Time `json:"lock_until"`
	LockedAt  time.Time `json:"locked_at"`
	LockedBy  string    `json:"locked_by"`
}

type AppSubscription struct {
	UserId           int64      `json:"userid"`
	ProductId        int64      `json:"productid"`
	Timestamp        *time.Time `json:"timestamp"`
	IsHidden         *bool      `json:"ishidden"`
	IsAutoSubscribed *bool      `json:"isautosubscribed"`
}

type AppTeam struct {
	ID                          *int64      `json:"id"`
	Name                        string      `json:"name"`
	ClientId                    *string     `json:"clientid"`
	GitHubAppInstallationId     *int64      `json:"githubappinstallationid"`
	GitHubAppInstallationActive *bool       `json:"githubappinstallationactive"`
	Fts                         interface{} `json:"fts"`
}

type AppTeamInvite struct {
	UserId    int64       `json:"userid"`
	TeamId    int64       `json:"teamid"`
	Timestamp *time.Time  `json:"timestamp"`
	IsAdmin   *bool       `json:"isadmin"`
	Fts       interface{} `json:"fts"`
}

type AppTeamPlan struct {
	TeamId                    int64      `json:"teamid"`
	PlanId                    int64      `json:"planid"`
	ActiveFrom                time.Time  `json:"activefrom"`
	ExpiresOn                 *time.Time `json:"expireson"`
	LastPaymentOn             *time.Time `json:"lastpaymenton"`
	BlueSnapShopperId         *int64     `json:"bluesnapshopperid"`
	BlueSnapSubscriptionId    *int64     `json:"bluesnapsubscriptionid"`
	BlueSnapOriginalInvoiceId *int64     `json:"bluesnaporiginalinvoiceid"`
	BlueSnapLastInvoiceId     *int64     `json:"bluesnaplastinvoiceid"`
}

type AppUser struct {
	ID         *int64           `json:"id"`
	Name       *string          `json:"name"`
	Email      string           `json:"email"`
	LastAccess *time.Time       `json:"lastaccess"`
	Settings   *json.RawMessage `json:"settings"`
	Fts        interface{}      `json:"fts"`
}

type AppVulnerabilitySeverityEnum struct {
	ID   int64       `json:"id"`
	Name string      `json:"name"`
	Fts  interface{} `json:"fts"`
}

type OsintAdvisoryType struct {
	Enum string `json:"enum"`
}

type OsintAlembicVersion struct {
	VersionNum string `json:"version_num"`
}

type OsintAttestation struct {
	ID                int64           `json:"id"`
	ContentType       string          `json:"contenttype"`
	TargetType        string          `json:"targettype"`
	TargetName        string          `json:"targetname"`
	ContextType       string          `json:"contexttype"`
	Context           json.RawMessage `json:"context"`
	Key               *string         `json:"key"`
	Timestamp         sql.NullTime    `json:"timestamp"`
	UserId            *int64          `json:"userid"`
	TeamId            *int64          `json:"teamid"`
	PipelineRun       int64           `json:"pipelinerun"`
	State             string          `json:"state"`
	SigStatus         *string         `json:"sigstatus"`
	Alerted           *bool           `json:"alerted"`
	License           *string         `json:"license"`
	Deleted           *bool           `json:"deleted"`
	JobIds            []string        `json:"job_ids"`
	Txt               interface{}     `json:"txt"`
	Project           *string         `json:"project"`
	LogicalApp        *string         `json:"logical_app"`
	LogicalAppVersion *string         `json:"logical_app_version"`
	Tool              *string         `json:"tool"`
}

type OsintAttestationComponent struct {
	Attestation int64            `json:"attestation"`
	Component   int64            `json:"component"`
	Info        *json.RawMessage `json:"info"`
}

type OsintComplianceRule struct {
	ID                   int64       `json:"id"`
	Type                 string      `json:"type"`
	RuleName             string      `json:"rulename"`
	RuleId               *string     `json:"ruleid"`
	Description          *string     `json:"description"`
	MessagePass          *string     `json:"messagepass"`
	MessageFail          *string     `json:"messagefail"`
	MessageReview        *string     `json:"messagereview"`
	MessageOpen          *string     `json:"messageopen"`
	MessageInformational *string     `json:"messageinformational"`
	MessageNotApplicable *string     `json:"messagenotapplicable"`
	SlsaLevel            *int        `json:"slsalevel"`
	Txt                  interface{} `json:"txt"`
}

type OsintComplianceRun struct {
	ID           int64            `json:"id"`
	PipelineRun  int64            `json:"pipelinerun"`
	Rule         int64            `json:"rule"`
	Status       string           `json:"status"`
	Message      *string          `json:"message"`
	Txt          interface{}      `json:"txt"`
	Info         *json.RawMessage `json:"info"`
	Attestations []int64          `json:"attestations"`
}

type OsintComplianceStatus struct {
	Enum  string      `json:"enum"`
	Label *string     `json:"label"`
	Txt   interface{} `json:"txt"`
}

type OsintComplianceType struct {
	Enum string `json:"enum"`
}

type OsintComponent struct {
	ID              int64            `json:"id"`
	Purl            string           `json:"purl"`
	TeamId          int64            `json:"teamid"`
	Type            string           `json:"type"`
	Group           string           `json:"group"`
	Cpes            []string         `json:"cpes"`
	Name            string           `json:"name"`
	MainAttestation *int64           `json:"mainattestation"`
	Info            *json.RawMessage `json:"info"`
	ExtraIdx        []int64          `json:"extraidx"`
	Licenses        *json.RawMessage `json:"licenses"`
	Txt             interface{}      `json:"txt"`
	Version         *string          `json:"version"`
}

type OsintComponentType struct {
	Enum  string      `json:"enum"`
	Label *string     `json:"label"`
	Txt   interface{} `json:"txt"`
}

type OsintContentType struct {
	Enum  string      `json:"enum"`
	Label *string     `json:"label"`
	Txt   interface{} `json:"txt"`
}

type OsintContextType struct {
	Enum  string      `json:"enum"`
	Label *string     `json:"label"`
	Txt   interface{} `json:"txt"`
}

type OsintEvidenceState struct {
	Enum string `json:"enum"`
}

type OsintPackageToVersion struct {
	ID          int64     `json:"id"`
	System      *string   `json:"system"`
	Name        string    `json:"name"`
	Version     *string   `json:"version"`
	ProjectType *string   `json:"project_type"`
	ProjectName *string   `json:"project_name"`
	SnapshotAt  time.Time `json:"snapshotat"`
}

type OsintPipelineRun struct {
	ID           int64            `json:"id"`
	ProductKey   string           `json:"productkey"`
	PipelineName string           `json:"pipelinename"`
	PipelineRun  string           `json:"pipelinerun"`
	Context      *json.RawMessage `json:"context"`
	Version      string           `json:"version"`
	Timestamp    sql.NullTime     `json:"timestamp"`
	Team         int64            `json:"team"`
	Deleted      *bool            `json:"deleted"`
}

type OsintRegistryImage struct {
	ID                 int64           `json:"id"`
	ImageID            string          `json:"image_id"`
	Digest             string          `json:"digest"`
	Repository         string          `json:"repository"`
	Tag                string          `json:"tag"`
	Layers             []string        `json:"layers"`
	Config             json.RawMessage `json:"config"`
	RegistryScanConfig int64           `json:"registry_scan_config"`
	State              string          `json:"state"`
	IsBaseImage        *bool           `json:"is_base_image"`
}

type OsintRegistryScanConfig struct {
	ID          int64    `json:"id"`
	TeamId      int64    `json:"teamid"`
	Provider    string   `json:"provider"`
	RegistryUrl string   `json:"registry_url"`
	Username    *string  `json:"username"`
	Password    *string  `json:"password"`
	Token       *string  `json:"token"`
	ReposFilter []string `json:"repos_filter"`
}

type OsintScorecard struct {
	ID          int64     `json:"id"`
	Date        time.Time `json:"date"`
	RepoName    string    `json:"repo_name"`
	Score       float64   `json:"score"`
	ProjectName *string   `json:"project_name"`
}

type OsintSignatureStatus struct {
	Enum string `json:"enum"`
}

type OsintTargetType struct {
	Enum  string      `json:"enum"`
	Label *string     `json:"label"`
	Txt   interface{} `json:"txt"`
}

type OsintVulAdvisory struct {
	ID           int64            `json:"id"`
	VulID        string           `json:"vul_id"`
	Source       string           `json:"source"`
	LastModified sql.NullTime     `json:"lastmodified"`
	Vector       *string          `json:"vector"`
	Cpes         []string         `json:"cpes"`
	PublishedOn  sql.NullTime     `json:"publishedon"`
	HyperLinks   []string         `json:"hyperlinks"`
	BaseScore    *float32         `json:"basescore"`
	AdvisoryText *string          `json:"advisorytext"`
	Info         *json.RawMessage `json:"info"`
	Txt          interface{}      `json:"txt"`
}

type OsintVulComponent struct {
	Component      int64      `json:"component"`
	VulId          string     `json:"vulid"`
	FixedInVersion *string    `json:"fixedinversion"`
	Txt            *string    `json:"txt"`
	Created        time.Time  `json:"created"`
	Deleted        *time.Time `json:"deleted"`
}

type OsintVulnerability struct {
	ID              string       `json:"id"`
	PublishedOn     sql.NullTime `json:"publishedon"`
	Severity        int32        `json:"severity"`
	CvssScore       *float32     `json:"cvssscore"`
	EpssProbability *float32     `json:"epssprobability"`
	Txt             *string      `json:"txt"`
}
