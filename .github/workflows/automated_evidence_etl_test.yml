name: Automated Evidence Store and ETL Tests

on:
  workflow_dispatch:

jobs:
  vulnerability_test:
    runs-on: ubuntu-latest
    environment: test

    steps:
      - name: Checkout scribe2 repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install SSM Plugin
        run: |
          curl "https://s3.amazonaws.com/session-manager-downloads/plugin/latest/ubuntu_64bit/session-manager-plugin.deb" -o "session-manager-plugin.deb"
          sudo dpkg -i session-manager-plugin.deb

      # Configure AWS CLI
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ vars.AWS_REGION }}

      - name: Install dependencies
        working-directory: etl
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # run the file build_test_image.py to build the test image
      - name: Build the Docker image
        env:
          TEST_IMAGE_GITHUB_URL: ${{ vars.TEST_IMAGE_GITHUB_URL }}
          TEST_IMAGE_NAME: ${{ vars.TEST_IMAGE_NAME }}
          TEST_REPO_DIR: ${{ vars.TEST_REPO_DIR }}
        run: python ./etl/tests/automation/build_test_image.py

      - name: Install valint
        run: curl -sSfL https://get.scribesecurity.com/install.sh | sh -s -- -t valint

      - name: Run valint in the test repository
        working-directory: ./${{ vars.TEST_REPO_DIR }}
        run: DEBUG=TRUE ~/.scribe/bin/valint bom docker:${{ vars.TEST_IMAGE_NAME }} -E -f -v --product-key=${{ vars.PRODUCT_KEY }} --scribe.client-id=${{ secrets.SCRIBE2_TEST_CLIENT_ID }} --scribe.client-secret=${{ secrets.SCRIBE2_TEST_CLIENT_SECRET }} --scribe.url=${{ vars.URL }} --scribe.auth.audience=${{ vars.AUDIENCE }} --scribe.login-url=${{ vars.LOGIN_URL }}

      - name: Run pytest tests
        env:
          DB_HOST: ${{ vars.DB_HOST }}
          DB_USER: ${{ vars.DB_USER }}
          TEST_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          DB_NAME: ${{ vars.DB_NAME }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          INSTANCE_ID: ${{ vars.INSTANCE_ID }}
          PRODUCT_KEY: ${{ vars.PRODUCT_KEY }}
          AWS_HOST: ${{ vars.AWS_HOST }}
        working-directory: etl
        run: pytest -s tests/automation/test_attestation_compare.py

      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notification_title: '{workflow} has {status_message}'
          mention_groups: "!channel"
          mention_groups_when: "failure,warnings"
          footer: "<{run_url}|View Run> | <{branch_url}|View Branch>"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SCRIBE2_SLACK_WEBHOOK_URL }}