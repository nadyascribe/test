"""mat views

Revision ID: 6088dff7ce0d
Revises: 5edea64a5480
Create Date: 2023-06-07 08:56:44.489552

"""
from alembic import op, context
from alembic_utils.pg_materialized_view import PGMaterializedView

# revision identifiers, used by Alembic.
revision = "6088dff7ce0d"
down_revision = "5edea64a5480"
branch_labels = None
depends_on = None


def upgrade() -> None:
    args = context.get_x_argument(as_dictionary=True)
    if args.get("sqlc-migrations", False):
        # sqlc failed with mat views :(
        return
    # ### commands auto generated by Alembic - please adjust! ###
    osint_componentvulnerabilities = PGMaterializedView(
        schema="osint",
        signature="ComponentVulnerabilities",
        definition='SELECT osint."Component".id AS component_id, count(1) FILTER (WHERE osint."Vulnerability".severity >= 4) AS severity_gte_4 \nFROM osint."Component" JOIN osint."VulComponent" ON osint."VulComponent".component = osint."Component".id JOIN osint."Vulnerability" ON osint."Vulnerability".id = osint."VulComponent"."vulId" GROUP BY osint."Component".id',
        with_data=False,
    )

    op.create_entity(osint_componentvulnerabilities)
    op.execute(
        """
    create unique index on osint."ComponentVulnerabilities" (component_id)
    """
    )
    osint_latestpackageversions = PGMaterializedView(
        schema="osint",
        signature="LatestPackageVersions",
        definition='WITH anon_1 AS \n(SELECT osint."PackageToVersion".name AS name, osint."PackageToVersion".project_name AS project_name, osint."PackageToVersion".system AS system, max(CAST(regexp_split_to_array(osint."PackageToVersion".version, \'\\\\.\') AS INTEGER[])) AS version_array \nFROM osint."PackageToVersion" \nWHERE osint."PackageToVersion".version ~ \'^\\\\d{1,8}(\\\\.\\\\d{1,8})*$\' GROUP BY osint."PackageToVersion".name, osint."PackageToVersion".project_name, osint."PackageToVersion".system)\n SELECT anon_1.name, anon_1.project_name, anon_1.system, anon_1.version_array, array_to_string(anon_1.version_array, \'.\') AS version \nFROM anon_1 JOIN (SELECT max(anon_1.version_array) AS max, anon_1.name AS name, anon_1.system AS system \nFROM anon_1 GROUP BY anon_1.name, anon_1.system) AS anon_2 ON anon_2.name = anon_1.name AND anon_2.system = anon_1.system AND anon_2.max = anon_1.version_array',
        with_data=False,
    )

    op.create_entity(osint_latestpackageversions)
    op.execute(
        """
    create unique index on osint."LatestPackageVersions" (name, project_name, system)
    """
    )

    osint_aggregatedsbom = PGMaterializedView(
        schema="osint",
        signature="AggregatedSbom",
        definition='SELECT osint."Attestation".logical_app, osint."Attestation".logical_app_version, osint."Attestation".context ->> \'input_tag\' AS anon_1, osint."Attestation"."targetName", osint."Attestation"."targetType", osint."Attestation".tool, osint."Attestation".id AS attestation_id, osint."Component".id AS component_id, \n    array_to_string(\n               ARRAY(SELECT jsonb_array_elements_text(osint."Attestation".context -> \'labels\') AS jsonb_array_elements_text),\n               \',\'::text)\n    _labels, osint."Component".name, osint."Component".version, osint."Component"."group", (SELECT osint."Scorecard".score \nFROM osint."Scorecard" \nWHERE osint."Scorecard".project_name = osint."LatestPackageVersions".project_name) AS scorecard, coalesce((SELECT osint."ComponentVulnerabilities".severity_gte_4 \nFROM osint."ComponentVulnerabilities" \nWHERE osint."ComponentVulnerabilities".component_id = osint."Component".id), 0) AS high_severity_cves, \n    array_to_string(\n               ARRAY(SELECT jsonb_array_elements_text(osint."Component".licenses) AS jsonb_array_elements_text),\n               \',\'::text)\n    _licenses, osint."LatestPackageVersions".version <= osint."Component".version AS version_is_up_to_date \nFROM osint."Attestation" JOIN osint."AttestationComponent" ON osint."Attestation".id = osint."AttestationComponent".attestation JOIN osint."Component" ON osint."Component".id = osint."AttestationComponent".component LEFT OUTER JOIN osint."LatestPackageVersions" ON lower(osint."Component".name) = lower(osint."LatestPackageVersions".name) \nWHERE (osint."Component"."group" NOT IN (\'file\', \'deb\', \'layer\', \'syft\'))',
        with_data=False,
    )

    op.create_entity(osint_aggregatedsbom)
    op.execute(
        """
    create unique index on osint."AggregatedSbom" (attestation_id, component_id)
    """
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    osint_aggregatedsbom = PGMaterializedView(
        schema="osint",
        signature="AggregatedSbom",
        definition='SELECT osint."Attestation".logical_app, osint."Attestation".logical_app_version, osint."Attestation".context ->> \'input_tag\' AS anon_1, osint."Attestation"."targetName", osint."Attestation"."targetType", osint."Attestation".tool, osint."Attestation".id AS attestation_id, osint."Component".id AS component_id, \n    array_to_string(\n               ARRAY(SELECT jsonb_array_elements_text(osint."Attestation".context -> \'labels\') AS jsonb_array_elements_text),\n               \',\'::text)\n    _labels, osint."Component".name, osint."Component".version, osint."Component"."group", (SELECT osint."Scorecard".score \nFROM osint."Scorecard" \nWHERE osint."Scorecard".project_name = osint."LatestPackageVersions".project_name) AS scorecard, coalesce((SELECT osint."ComponentVulnerabilities".severity_gte_4 \nFROM osint."ComponentVulnerabilities" \nWHERE osint."ComponentVulnerabilities".component_id = osint."Component".id), 0) AS high_severity_cves, \n    array_to_string(\n               ARRAY(SELECT jsonb_array_elements_text(osint."Component".licenses) AS jsonb_array_elements_text),\n               \',\'::text)\n    _licenses, osint."LatestPackageVersions".version <= osint."Component".version AS version_is_up_to_date \nFROM osint."Attestation" JOIN osint."AttestationComponent" ON osint."Attestation".id = osint."AttestationComponent".attestation JOIN osint."Component" ON osint."Component".id = osint."AttestationComponent".component LEFT OUTER JOIN osint."LatestPackageVersions" ON lower(osint."Component".name) = lower(osint."LatestPackageVersions".name) \nWHERE (osint."Component"."group" NOT IN (\'file\', \'deb\', \'layer\', \'syft\'))',
        with_data=False,
    )

    op.drop_entity(osint_aggregatedsbom)

    osint_latestpackageversions = PGMaterializedView(
        schema="osint",
        signature="LatestPackageVersions",
        definition='WITH anon_1 AS \n(SELECT osint."PackageToVersion".name AS name, osint."PackageToVersion".project_name AS project_name, osint."PackageToVersion".system AS system, max(CAST(regexp_split_to_array(osint."PackageToVersion".version, \'\\\\.\') AS INTEGER[])) AS version_array \nFROM osint."PackageToVersion" \nWHERE osint."PackageToVersion".version ~ \'^\\\\d{1,8}(\\\\.\\\\d{1,8})*$\' GROUP BY osint."PackageToVersion".name, osint."PackageToVersion".project_name, osint."PackageToVersion".system)\n SELECT anon_1.name, anon_1.project_name, anon_1.system, anon_1.version_array, array_to_string(anon_1.version_array, \'.\') AS version \nFROM anon_1 JOIN (SELECT max(anon_1.version_array) AS max, anon_1.name AS name, anon_1.system AS system \nFROM anon_1 GROUP BY anon_1.name, anon_1.system) AS anon_2 ON anon_2.name = anon_1.name AND anon_2.system = anon_1.system AND anon_2.max = anon_1.version_array',
        with_data=False,
    )

    op.drop_entity(osint_latestpackageversions)

    osint_componentvulnerabilities = PGMaterializedView(
        schema="osint",
        signature="ComponentVulnerabilities",
        definition='SELECT osint."Component".id AS component_id, count(1) FILTER (WHERE osint."Vulnerability".severity >= 4) AS severity_gte_4 \nFROM osint."Component" JOIN osint."VulComponent" ON osint."VulComponent".component = osint."Component".id JOIN osint."Vulnerability" ON osint."Vulnerability".id = osint."VulComponent"."vulId" GROUP BY osint."Component".id',
        with_data=False,
    )

    op.drop_entity(osint_componentvulnerabilities)

    # ### end Alembic commands ###
