"""synchronize schemas

Revision ID: 484ad3956ae3
Revises: 0e57fa225358
Create Date: 2023-05-30 09:42:24.866973

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.engine import reflection
from sqlalchemy.engine.mock import MockConnection

# revision identifiers, used by Alembic.
revision = "484ad3956ae3"
down_revision = "0e57fa225358"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("Vulnerability_lastModified_key", table_name="Vulnerability", schema="osint")
    op.drop_column("Vulnerability", "lastModified", schema="osint")

    inspector: reflection.Inspector | None = None
    if not isinstance(op.get_bind(), MockConnection):
        inspector = reflection.Inspector.from_engine(op.get_bind())

    op.create_index(
        "Attestation_txt_key",
        "Attestation",
        ["txt"],
        unique=False,
        schema="osint",
        postgresql_using="gin",
    )

    indxs = inspector.get_indexes("ComplianceRule", schema="osint") if inspector is not None else []
    if not any(indx["name"] == "ComplianceRule_txt_key" for indx in indxs):
        op.create_index(
            "ComplianceRule_txt_key",
            "ComplianceRule",
            ["txt"],
            unique=False,
            schema="osint",
            postgresql_using="gin",
        )

    op.alter_column("Component", "type", existing_type=sa.TEXT(), nullable=False, schema="osint")
    indxs = inspector.get_indexes("Vulnerability", schema="osint") if inspector is not None else []
    if inspector is None or not any(indx["name"] == "Vulnerability_txt_key" for indx in indxs):
        op.create_index(
            "Vulnerability_txt_key",
            "Vulnerability",
            ["txt"],
            unique=False,
            schema="osint",
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "Vulnerability",
        sa.Column(
            "lastModified",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=True,
        ),
        schema="osint",
    )
    op.create_index(
        "Vulnerability_lastModified_key",
        "Vulnerability",
        ["lastModified"],
        unique=False,
        schema="osint",
    )
    op.alter_column("Component", "type", existing_type=sa.TEXT(), nullable=True, schema="osint")
    op.drop_index(
        "Attestation_txt_key",
        table_name="Attestation",
        schema="osint",
        postgresql_using="gin",
    )
    # ### end Alembic commands ###
